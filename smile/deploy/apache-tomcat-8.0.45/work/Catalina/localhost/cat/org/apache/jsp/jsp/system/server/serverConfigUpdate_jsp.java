/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.45
 * Generated at: 2019-04-16 11:23:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.system.server;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class serverConfigUpdate_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(7);
    _jspx_dependants.put("/WEB-INF/tags/config.tag", Long.valueOf(1550137646000L));
    _jspx_dependants.put("/WEB-INF/web-core.tld", Long.valueOf(1539067812000L));
    _jspx_dependants.put("/WEB-INF/tags/base.tag", Long.valueOf(1539067812000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1533486250000L));
    _jspx_dependants.put("/WEB-INF/app.tld", Long.valueOf(1539067812000L));
    _jspx_dependants.put("jar:file:/E:/example/openSourceProject/cat/smile/deploy/apache-tomcat-8.0.45/webapps/cat/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("/WEB-INF/webres.tld", Long.valueOf(1538015570000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fres_005fuseJs_0026_005fvalue_005ftarget_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fres_005fuseJs_0026_005fvalue_005ftarget_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fres_005fuseJs_0026_005fvalue_005ftarget_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      com.dianping.cat.system.page.config.Context ctx = null;
      ctx = (com.dianping.cat.system.page.config.Context) _jspx_page_context.getAttribute("ctx", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (ctx == null){
        throw new java.lang.InstantiationException("bean ctx not found within scope");
      }
      out.write('\n');
      com.dianping.cat.system.page.config.Payload payload = null;
      payload = (com.dianping.cat.system.page.config.Payload) _jspx_page_context.getAttribute("payload", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (payload == null){
        throw new java.lang.InstantiationException("bean payload not found within scope");
      }
      out.write('\n');
      com.dianping.cat.system.page.config.Model model = null;
      model = (com.dianping.cat.system.page.config.Model) _jspx_page_context.getAttribute("model", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (model == null){
        throw new java.lang.InstantiationException("bean model not found within scope");
      }
      out.write('\n');
      out.write('\n');
      if (_jspx_meth_a_005fconfig_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("    $(document).ready(function () {\n");
      out.write("        $('#overall_config').addClass('active open');\n");
      out.write("        $('#serverConfigUpdate').addClass('active');\n");
      out.write("        var state = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.opState}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("        if (state == 'Success') {\n");
      out.write("            $('#state').html('操作成功');\n");
      out.write("        } else {\n");
      out.write("            $('#state').html('操作失败');\n");
      out.write("        }\n");
      out.write("        setInterval(function () {\n");
      out.write("            $('#state').html('&nbsp;');\n");
      out.write("        }, 3000);\n");
      out.write("    });\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_a_005fconfig_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  a:config
    org.apache.jsp.tag.web.config_tag _jspx_th_a_005fconfig_005f0 = new org.apache.jsp.tag.web.config_tag();
    _jsp_getInstanceManager().newInstance(_jspx_th_a_005fconfig_005f0);
    try {
      _jspx_th_a_005fconfig_005f0.setJspContext(_jspx_page_context);
      _jspx_th_a_005fconfig_005f0.setJspBody(new Helper( 0, _jspx_page_context, _jspx_th_a_005fconfig_005f0, null));
      _jspx_th_a_005fconfig_005f0.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_a_005fconfig_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_res_005fuseJs_005f0(javax.servlet.jsp.tagext.JspTag _jspx_parent, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  res:useJs
    org.unidal.webres.taglib.basic.UseJsTagHandler _jspx_th_res_005fuseJs_005f0 = (org.unidal.webres.taglib.basic.UseJsTagHandler) _005fjspx_005ftagPool_005fres_005fuseJs_0026_005fvalue_005ftarget_005fnobody.get(org.unidal.webres.taglib.basic.UseJsTagHandler.class);
    boolean _jspx_th_res_005fuseJs_005f0_reused = false;
    try {
      _jspx_th_res_005fuseJs_005f0.setPageContext(_jspx_page_context);
      _jspx_th_res_005fuseJs_005f0.setParent(new javax.servlet.jsp.tagext.TagAdapter((javax.servlet.jsp.tagext.SimpleTag) _jspx_parent));
      // /jsp/system/server/serverConfigUpdate.jsp(11,4) name = value type = java.lang.Object reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_res_005fuseJs_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${res.js.local['jquery.validate.min.js']}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      // /jsp/system/server/serverConfigUpdate.jsp(11,4) name = target type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_res_005fuseJs_005f0.setTarget("head-js");
      int _jspx_eval_res_005fuseJs_005f0 = _jspx_th_res_005fuseJs_005f0.doStartTag();
      if (_jspx_th_res_005fuseJs_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        throw new javax.servlet.jsp.SkipPageException();
      }
      _005fjspx_005ftagPool_005fres_005fuseJs_0026_005fvalue_005ftarget_005fnobody.reuse(_jspx_th_res_005fuseJs_005f0);
      _jspx_th_res_005fuseJs_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_res_005fuseJs_005f0, _jsp_getInstanceManager(), _jspx_th_res_005fuseJs_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_res_005fuseJs_005f1(javax.servlet.jsp.tagext.JspTag _jspx_parent, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  res:useJs
    org.unidal.webres.taglib.basic.UseJsTagHandler _jspx_th_res_005fuseJs_005f1 = (org.unidal.webres.taglib.basic.UseJsTagHandler) _005fjspx_005ftagPool_005fres_005fuseJs_0026_005fvalue_005ftarget_005fnobody.get(org.unidal.webres.taglib.basic.UseJsTagHandler.class);
    boolean _jspx_th_res_005fuseJs_005f1_reused = false;
    try {
      _jspx_th_res_005fuseJs_005f1.setPageContext(_jspx_page_context);
      _jspx_th_res_005fuseJs_005f1.setParent(new javax.servlet.jsp.tagext.TagAdapter((javax.servlet.jsp.tagext.SimpleTag) _jspx_parent));
      // /jsp/system/server/serverConfigUpdate.jsp(12,4) name = value type = java.lang.Object reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_res_005fuseJs_005f1.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${res.js.local['editor.js']}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      // /jsp/system/server/serverConfigUpdate.jsp(12,4) name = target type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_res_005fuseJs_005f1.setTarget("head-js");
      int _jspx_eval_res_005fuseJs_005f1 = _jspx_th_res_005fuseJs_005f1.doStartTag();
      if (_jspx_th_res_005fuseJs_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        throw new javax.servlet.jsp.SkipPageException();
      }
      _005fjspx_005ftagPool_005fres_005fuseJs_0026_005fvalue_005ftarget_005fnobody.reuse(_jspx_th_res_005fuseJs_005f1);
      _jspx_th_res_005fuseJs_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_res_005fuseJs_005f1, _jsp_getInstanceManager(), _jspx_th_res_005fuseJs_005f1_reused);
    }
    return false;
  }

  private class Helper
      extends org.apache.jasper.runtime.JspFragmentHelper
  {
    private javax.servlet.jsp.tagext.JspTag _jspx_parent;
    private int[] _jspx_push_body_count;

    public Helper( int discriminator, javax.servlet.jsp.JspContext jspContext, javax.servlet.jsp.tagext.JspTag _jspx_parent, int[] _jspx_push_body_count ) {
      super( discriminator, jspContext, _jspx_parent );
      this._jspx_parent = _jspx_parent;
      this._jspx_push_body_count = _jspx_push_body_count;
    }
    public boolean invoke0( javax.servlet.jsp.JspWriter out ) 
      throws java.lang.Throwable
    {
      out.write("\n");
      out.write("    ");
      if (_jspx_meth_res_005fuseJs_005f0(_jspx_parent, _jspx_page_context))
        return true;
      out.write("\n");
      out.write("    ");
      if (_jspx_meth_res_005fuseJs_005f1(_jspx_parent, _jspx_page_context))
        return true;
      out.write("\n");
      out.write("    <script src='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.webapp}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/assets/js/editor/ace.js'></script>\n");
      out.write("\n");
      out.write("    <style>\n");
      out.write("        .cat-alarm-tip {\n");
      out.write("            padding: 1em;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .cat-alarm-tip-container {\n");
      out.write("            padding: 0.5em;\n");
      out.write("            border: 1px solid #ffeeba;\n");
      out.write("            background-color: #fff3cd;\n");
      out.write("            color: #856404;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .cat-alarm-tip-container h4 {\n");
      out.write("            font-size: 1.5em;\n");
      out.write("            padding: 0;\n");
      out.write("            margin: 0 0 0.3em;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .cat-alarm-tip-container p {\n");
      out.write("            margin-bottom: 0.3em;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .cat-alarm-tip-container button {\n");
      out.write("            margin-right: 0.5em;\n");
      out.write("            padding: 0.2em 0.5em;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .cat-alarm-tip-container a.question {\n");
      out.write("            margin-right: 0.5em;\n");
      out.write("            cursor: not-allowed;\n");
      out.write("            color: #CCC;\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("\n");
      out.write("    <div class=\"cat-alarm-tip\">\n");
      out.write("        <div class=\"cat-alarm-tip-container\">\n");
      out.write("            <h4>配置说明：</h4>\n");
      out.write("            <p>* local-mode : 定义服务是否为本地模式（开发模式），在生产环境时，设置为false,启动远程监听模式。默认为 false;</p>\n");
      out.write("            <p>* hdfs-machine : 定义是否启用HDFS存储方式，默认为 false；</p>\n");
      out.write("            <p>* job-machine : 定义当前服务是否为报告工作机（开启生成汇总报告和统计报告的任务，只需要一台服务机开启此功能），默认为 false；</p>\n");
      out.write("            <p>* alarm-machine : 定义当前服务是否为报警机（开启各类报警监听，只需要一台服务机开启此功能），默认为 false；</p>\n");
      out.write("            <p>* storage : 定义数据存储配置信息</p>\n");
      out.write("            <p>* local-report-storage-time : 定义本地报告存放时长，单位为（天）</p>\n");
      out.write("            <p>* local-logivew-storage-time : 定义本地日志存放时长，单位为（天）</p>\n");
      out.write("            <p>* local-base-dir : 定义本地数据存储目录</p>\n");
      out.write("            <p>* hdfs : 定义HDFS配置信息，便于直接登录系统</p>\n");
      out.write("            <p>* server-uri : 定义HDFS服务地址</p>\n");
      out.write("            <p>* remote-servers : 定义HTTP服务列表，（远程监听端同步更新服务端信息即取此值）</p>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <form name=\"serverConfigUpdate\" id=\"form\" method=\"post\"\n");
      out.write("          action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.pageUri}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("?op=serverConfigUpdate\">\n");
      out.write("        <table class=\"table table-striped table-condensed  table-hover\">\n");
      out.write("            <tr>\n");
      out.write("                <td>\n");
      out.write("                    <input id=\"content\" name=\"content\" value=\"\" type=\"hidden\"/>\n");
      out.write("                    <div id=\"editor\" class=\"editor\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.content}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\n");
      out.write("                </td>\n");
      out.write("            </tr>\n");
      out.write("            <tr>\n");
      out.write("                <td style=\"text-align:center\"><input class='btn btn-primary' id=\"serverConfigUpdate\"\n");
      out.write("                                                     type=\"submit\" name=\"submit\" value=\"提交\"/></td>\n");
      out.write("            </tr>\n");
      out.write("        </table>\n");
      out.write("    </form>\n");
      out.write("    <h4 class=\"text-center text-danger\" id=\"state\">&nbsp;</h4>\n");
      return false;
    }
    public void invoke( java.io.Writer writer )
      throws javax.servlet.jsp.JspException
    {
      javax.servlet.jsp.JspWriter out = null;
      if( writer != null ) {
        out = this.jspContext.pushBody(writer);
      } else {
        out = this.jspContext.getOut();
      }
      try {
        Object _jspx_saved_JspContext = this.jspContext.getELContext().getContext(javax.servlet.jsp.JspContext.class);
        this.jspContext.getELContext().putContext(javax.servlet.jsp.JspContext.class,this.jspContext);
        switch( this.discriminator ) {
          case 0:
            invoke0( out );
            break;
        }
        jspContext.getELContext().putContext(javax.servlet.jsp.JspContext.class,_jspx_saved_JspContext);
      }
      catch( java.lang.Throwable e ) {
        if (e instanceof javax.servlet.jsp.SkipPageException)
            throw (javax.servlet.jsp.SkipPageException) e;
        throw new javax.servlet.jsp.JspException( e );
      }
      finally {
        if( writer != null ) {
          this.jspContext.popBody();
        }
      }
    }
  }
}
