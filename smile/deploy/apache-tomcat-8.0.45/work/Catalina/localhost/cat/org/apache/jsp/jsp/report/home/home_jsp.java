/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.45
 * Generated at: 2019-04-16 11:06:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.report.home;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(14);
    _jspx_dependants.put("/jsp/report/home/browser.jsp", Long.valueOf(1539067812000L));
    _jspx_dependants.put("/jsp/report/home/browser/web.jsp", Long.valueOf(1539067812000L));
    _jspx_dependants.put("/WEB-INF/web-core.tld", Long.valueOf(1539067812000L));
    _jspx_dependants.put("/jsp/report/home/releasenotes.jsp", Long.valueOf(1539067812000L));
    _jspx_dependants.put("/WEB-INF/app.tld", Long.valueOf(1539067812000L));
    _jspx_dependants.put("jar:file:/E:/example/openSourceProject/cat/smile/deploy/apache-tomcat-8.0.45/webapps/cat/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("/WEB-INF/tags/home.tag", Long.valueOf(1543892024000L));
    _jspx_dependants.put("/jsp/report/home/index.jsp", Long.valueOf(1539067812000L));
    _jspx_dependants.put("/WEB-INF/webres.tld", Long.valueOf(1538015570000L));
    _jspx_dependants.put("/jsp/report/home/plugin.jsp", Long.valueOf(1538015570000L));
    _jspx_dependants.put("/WEB-INF/tags/base.tag", Long.valueOf(1539067812000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1533486250000L));
    _jspx_dependants.put("/jsp/report/home/browser/interface.jsp", Long.valueOf(1539067812000L));
    _jspx_dependants.put("/jsp/report/home/browser/jsAlert.jsp", Long.valueOf(1539067812000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, false, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      com.dianping.cat.report.page.home.Context ctx = null;
      ctx = (com.dianping.cat.report.page.home.Context) _jspx_page_context.getAttribute("ctx", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (ctx == null){
        throw new java.lang.InstantiationException("bean ctx not found within scope");
      }
      out.write('\n');
      com.dianping.cat.report.page.home.Payload payload = null;
      payload = (com.dianping.cat.report.page.home.Payload) _jspx_page_context.getAttribute("payload", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (payload == null){
        throw new java.lang.InstantiationException("bean payload not found within scope");
      }
      out.write('\n');
      com.dianping.cat.report.page.home.Model model = null;
      model = (com.dianping.cat.report.page.home.Model) _jspx_page_context.getAttribute("model", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (model == null){
        throw new java.lang.InstantiationException("bean model not found within scope");
      }
      out.write('\n');
      if (_jspx_meth_a_005fhome_005f0(_jspx_page_context))
        return;
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_a_005fhome_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  a:home
    org.apache.jsp.tag.web.home_tag _jspx_th_a_005fhome_005f0 = new org.apache.jsp.tag.web.home_tag();
    _jsp_getInstanceManager().newInstance(_jspx_th_a_005fhome_005f0);
    try {
      _jspx_th_a_005fhome_005f0.setJspContext(_jspx_page_context);
      _jspx_th_a_005fhome_005f0.setJspBody(new Helper( 0, _jspx_page_context, _jspx_th_a_005fhome_005f0, null));
      _jspx_th_a_005fhome_005f0.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_a_005fhome_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.tagext.JspTag _jspx_parent, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(new javax.servlet.jsp.tagext.TagAdapter((javax.servlet.jsp.tagext.SimpleTag) _jspx_parent));
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("\t\t\t\t");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\n");
          out.write("\t   \t");
          if (_jspx_meth_c_005fwhen_005f1(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\n");
          out.write("\t   \t");
          out.write("\n");
          out.write("\t   \t\t");
          out.write("\n");
          out.write("\t   \t");
          out.write("\n");
          out.write("\t   \t");
          out.write("\n");
          out.write("\t   \t\t");
          out.write("\n");
          out.write("\t   \t");
          out.write("\n");
          out.write("\t   \t");
          out.write("\n");
          out.write("\t   \t\t");
          out.write("\n");
          out.write("\t   \t");
          out.write("\n");
          out.write("\t   \t");
          out.write("\n");
          out.write("\t   \t\t");
          out.write("\n");
          out.write("\t   \t");
          out.write("\n");
          out.write("\t   \t");
          out.write("\n");
          out.write("\t   \t\t");
          out.write("\n");
          out.write("\t   \t");
          out.write("\n");
          out.write("\t  \t");
          out.write("\n");
          out.write("\t   \t\t");
          out.write("\n");
          out.write("\t   \t");
          out.write("\n");
          out.write("\t   \t");
          out.write("\n");
          out.write("\t   \t\t");
          out.write("\n");
          out.write("\t   \t");
          out.write("\n");
          out.write("\t   \t");
          out.write("\n");
          out.write("\t   \t\t");
          out.write("\n");
          out.write("\t   \t");
          out.write("\n");
          out.write("\t   \t");
          out.write("\n");
          out.write("\t   \t\t");
          out.write("\n");
          out.write("\t   \t");
          out.write("\n");
          out.write("\t   \t");
          out.write("\n");
          out.write("\t   \t\t");
          out.write("\n");
          out.write("\t   \t");
          out.write("\n");
          out.write("\t   \t");
          if (_jspx_meth_c_005fwhen_005f2(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\n");
          out.write("\t   \t");
          if (_jspx_meth_c_005fwhen_005f3(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\n");
          out.write("\t   \t");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\n");
          out.write("\t \t\t");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        throw new javax.servlet.jsp.SkipPageException();
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /jsp/report/home/home.jsp(12,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${payload.docName == 'dianping'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("\t   \t\t");
          out.write("\n");
          out.write("<h4 class=\"text-success\">CAT总体介绍</h4>\n");
          out.write("<h5>CAT(Central Application Tracking)是基于Java开发的实时应用监控平台，为美团点评提供了全面的监控服务和决策支持。\n");
          out.write("</h5>\n");
          out.write("<h5>CAT作为美团点评基础监控组件，它已经在中间件框架（MVC框架，RPC框架，数据库框架，缓存框架等）中得到广泛应用，为美团点评各业务线提供系统的性能指标、健康状况、基础告警等。</h5>\n");
          out.write("</br>\n");
          out.write("<h4 class=\"text-success\">CAT目前现状</h4>\n");
          out.write("\t<ul>\n");
          out.write("\t\t<li>15台CAT物理监控集群</li>\n");
          out.write("\t\t<li>单台机器15w qps</li>\n");
          out.write("\t\t<li>2000+ 业务应用（包括部分.net以及Job）</li>\n");
          out.write("\t\t<li>7000+ 应用服务器</li>\n");
          out.write("\t\t<li>50TB 消息，~450亿消息（每天）</li>\n");
          out.write("\t</ul>\n");
          out.write("\t<br/>\n");
          out.write("<h4 class=\"text-success\">CAT监控大盘</h4>\n");
          out.write("<div>\n");
          out.write("\t<a id=\"navmetricDashboard\" class=\"btn btn-sm btn-primary\" target=\"_blank\" href=\"/cat/r/top?op=view&domain=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.domain}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">系统报错大盘</a>\n");
          out.write("\t");
          out.write('\n');
          out.write('	');
          out.write('\n');
          out.write('	');
          out.write('\n');
          out.write('	');
          out.write("\n");
          out.write("</div>\n");
          out.write("</br>\n");
          out.write('\n');
          out.write('\n');
          out.write('	');
          out.write('\n');
          out.write('	');
          out.write('\n');
          out.write('	');
          out.write('\n');
          out.write('\n');
          out.write("\n");
          out.write("<h4 class=\"text-danger\">更多接入公司，欢迎在<a href=\"https://github.com/dianping/cat/issues/753\" target=\"_blank\">登记！</a></h4>\n");
          out.write("<table>\n");
          out.write("\t<tr>\n");
          out.write("\t\t<td><a target=\"_blank\" href=\"http://www.dianping.com/\"><img  class=\"img-polaroid\"  src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.webapp}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/images/logo/dianping.png\"/></a></td>\n");
          out.write("\t\t<td><a target=\"_blank\" href=\"http://www.ctrip.com/\"><img  class=\"img-polaroid\"  src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.webapp}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/images/logo/ctrip.png\"/></a></td>\n");
          out.write("\t\t<td><a target=\"_blank\" href=\"https://www.lufax.com/\"><img  class=\"img-polaroid\"  src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.webapp}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/images/logo/lufax.png\"/></a></td>\n");
          out.write("\t\t<td><a target=\"_blank\" href=\"http://www.ly.com/\"><img  class=\"img-polaroid\"  src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.webapp}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/images/logo/ly.png\"/></a></td>\n");
          out.write("\t</tr>\n");
          out.write("\t<tr>\n");
          out.write("\t\t<td><a target=\"_blank\" href=\"http://www.liepin.com/\"><img  class=\"img-polaroid\"  src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.webapp}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/images/logo/liepin.png\"/></a></td>\n");
          out.write("\t\t<td><a target=\"_blank\" href=\"http://www.qipeipu.com/\"><img  class=\"img-polaroid\"  src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.webapp}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/images/logo/qipeipu.jpg\"/></a></td>\n");
          out.write("\t\t<td><a target=\"_blank\" href=\"http://www.shangpin.com/\"><img  class=\"img-polaroid\"  src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.webapp}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/images/logo/shangping.jpg\"/></a></td>\n");
          out.write("\t\t<td><a target=\"_blank\" href=\"http://www.travelzen.com/flight/\"><img  class=\"img-polaroid\"  src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.webapp}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/images/logo/zhenlv.png\"/></a></td>\n");
          out.write("\t\t<td></td>\n");
          out.write("\t</tr>\n");
          out.write("\t<tr>\n");
          out.write("\t\t<td><a target=\"_blank\" href=\"http://www.oppo.com/\"><img  class=\"img-polaroid\"  src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.webapp}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/images/logo/oppo.png\"/></a></td>\n");
          out.write("\t</tr>\n");
          out.write("</table>\n");
          out.write("\n");
          out.write("\t   \t");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        throw new javax.servlet.jsp.SkipPageException();
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f1 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f1_reused = false;
    try {
      _jspx_th_c_005fwhen_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /jsp/report/home/home.jsp(15,5) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${payload.docName == 'release'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f1 = _jspx_th_c_005fwhen_005f1.doStartTag();
      if (_jspx_eval_c_005fwhen_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("\t   \t\t");
          out.write("\n");
          out.write("<table class='table table-bordered table-striped table-condensed  '>\n");
          out.write("\t<tr class=\"text-success\"><th width=\"8%\">版本</th><th width=\"82%\">说明</th><th width=\"10%\">发布时间</th></tr>\n");
          out.write("\t<tr><td>3.0.0</td><td>国庆献礼，重大更新：1、增加多语言客户端；2、增加聚合采样，大幅提升性能效率；3、采用二进制协议通信； 4、新版消息文件存储</td><td>2018-10-01</td></tr>\n");
          out.write("\t<tr><td>1.3.8</td><td>1、增加了客户端路由，去除了NullMessage。</td><td>2014-12-09</td></tr>\n");
          out.write("\t<tr><td>1.2.8</td><td>1、合并单独的Event，Metric等原子消息，减少消息总量。修复了启动时候连接服务端的bug</td><td>2014-12-09</td></tr>\n");
          out.write("\t<tr><td>1.1.9</td><td>1、修复了消息截断时候，统计时间的bug</td><td>2014-12-09</td></tr>\n");
          out.write("\t<tr><td>1.1.5</td><td>1、修复了CAT初始化路由出错导致监控信息丢失的bug</td><td>2014-11-21</td></tr>\n");
          out.write("\t<tr><td>1.1.2</td><td>1、动态配置CAT的路由策略，支持统一项目名调整</td><td>2014-08-02</td></tr>\n");
          out.write("\t<tr><td>1.0.1</td><td>1、将ABtest的功能从监控中分离</td><td>2014-01-02</td></tr>\n");
          out.write("\t<tr><td>1.0.0</td><td>1、修复了CAT监控初始化当服务端都出异常的状况，不会自动连接的Bug</td><td>2013-12-20</td></tr>\n");
          out.write("\t<tr><td>0.6.2</td><td>1、支持java job的监控，优化了cat的API</td><td>2013-08-06</td></tr>\n");
          out.write("\t<tr><td>0.6.1</td><td>1、cat客户端的消息长度设置了子消息的最大长度（500），多的消息直接丢弃，以防止内存过大的CAT消息内存泄露</td><td>2013-06-06</td></tr>\n");
          out.write("\t<tr><td>0.6.0</td><td>1、增加业务监控埋点API。2、修复时间戳调整bug。3、修复classpath获取bug。4、修复CatFilter支持Forward请求</td><td>2013-03-26</td></tr>\n");
          out.write("\t<tr><td>0.4.1</td><td>1、默认禁止心跳线程获取线程锁信息，以降低对业务线程的影响。</td><td>2012-09-06</td></tr>\n");
          out.write("\t<tr><td>0.4.0</td><td>1、支持开关动态关闭。2、后端存储重构，支持分布式Logview的查看(关联pigeon的call)。</td><td>2012-08-20</td></tr>\n");
          out.write("\t<tr><td>0.3.4</td><td>1、规范了CAT客户端的日志。2、规范了后台模块的加载顺序。3、统一服务端配置存取。4、新增心跳报表的Http线程 </td><td>2012-07-25</td></tr>\n");
          out.write("\t<tr><td>0.3.3</td><td>1、修改CAT线程为后台Dameon线程。2、减少CAT的日志输出。3、修复了极端情况客户端丢失部分消息。4、支持CAT的延迟加载。5、修复了0.3.2一个getLog的bug</td><td>2012-07-17</td></tr>\n");
          out.write("\t<tr><td>0.3.2</td><td>1、修复了配置单个服务器时候，服务器重启，客户端断开链接bug。2、修复了CAT不正常加载时候，内存溢出的问题。（此版本有问题，请更新至0.3.3）</td><td>2012-07-01</td></tr>\n");
          out.write("\t<tr><td>0.3.1</td><td>1、修复CAT在业务testcase的使用，支持业务运行Testcase在Console上看到运行情况。</td><td>2012-06-25</td></tr>\n");
          out.write("\t<tr><td>0.3.0</td><td>1、修复CAT在Transaction Name的Nullpoint异常。</td><td>2012-06-15</td></tr>\n");
          out.write("\t<tr><td>0.2.5</td><td>1、心跳消息监控新增oldgc和newgc  2、更新了ThreadLocal的线程模型（修复了一些无头消息和部分错乱消息）</td><td>2012-05-01</td></tr>\n");
          out.write("</table>\n");
          out.write("\n");
          out.write("\n");
          out.write("\t   \t");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        throw new javax.servlet.jsp.SkipPageException();
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f1);
      _jspx_th_c_005fwhen_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f2 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f2_reused = false;
    try {
      _jspx_th_c_005fwhen_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /jsp/report/home/home.jsp(48,5) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${payload.docName == 'plugin'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f2 = _jspx_th_c_005fwhen_005f2.doStartTag();
      if (_jspx_eval_c_005fwhen_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("\t   \t\t");
          out.write("\n");
          out.write("<ul>\n");
          out.write("\t<li>下载<a href=\"/cat/s/plugin/chrome\">Chrome扩展插件</a>，保存到cat.crx文件</li>\n");
          out.write("\t<li>选择菜单：窗口 --&gt; 扩展程序, 或者在URL中输入：chrome://extensions</li>\n");
          out.write("\t<li>用鼠标将cat.crx文件拖到扩展程序管理页面，开始安装</li>\n");
          out.write("\t<li>现在，对于支持CAT的页面，浏览器URL框中会出现CAT小图标<br><img  class=\"img-polaroid\"  src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.webapp}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/images/cat-chrome.png\">\n");
          out.write("\t\t点击查看CAT Logview</li>\n");
          out.write("</ul>\n");
          out.write("\n");
          out.write("\t   \t");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        throw new javax.servlet.jsp.SkipPageException();
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f2);
      _jspx_th_c_005fwhen_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f3 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f3_reused = false;
    try {
      _jspx_th_c_005fwhen_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /jsp/report/home/home.jsp(51,5) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${payload.docName == 'browserMonitor'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f3 = _jspx_th_c_005fwhen_005f3.doStartTag();
      if (_jspx_eval_c_005fwhen_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("\t   \t\t");
          out.write("\n");
          out.write("<div class=\"tabbable\">\n");
          out.write("  <ul class=\"nav nav-tabs padding-12 tab-color-blue background-blue\" style=\"height: 50px;\">\n");
          out.write("    <li class=\"active\"><a href=\"#report\" data-toggle=\"tab\"><strong>web访问</strong></a></li>\n");
          out.write("    <li><a href=\"#interface\" data-toggle=\"tab\"><strong>接口文档</strong></a></a></li>\n");
          out.write("    <li><a href=\"#alert\" data-toggle=\"tab\"><strong>JS告警配置</strong></a></li>\n");
          out.write("  </ul>\n");
          out.write("  \n");
          out.write("  <div class=\"tab-content\">\n");
          out.write("    <div class=\"tab-pane active\" id=\"report\">");
          out.write("\n");
          out.write("<h4 class=\"text-danger\">1、Browser使用说明&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"/cat/r/browser\">访问链接</a></h4>\n");
          out.write("<p>监控点评Web页面的ajax的接口调用情况，这个是从用户Web浏览器采集的数据，从用户角度看点评接口的访问速度。</p>\n");
          out.write("<p>分析的维度有地区、运营商等。</p>\n");
          out.write("<p>此部分需要前端框架cortext配合，进行前端打点。</p>\n");
          out.write("</br>\n");
          out.write("\n");
          out.write("<p>Sample：下图显示了shopweb-suggestShop一段时间的访问情况。</p>\n");
          out.write("<img  class=\"img-polaroid\"  width='80%'  src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.webapp}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/images/userMonitor/userMonitor02.png\"/>\n");
          out.write("\n");
          out.write("</br></br>\n");
          out.write("<h4 class=\"text-danger\">2、配置&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"/cat/s/web?op=urlPatterns\">访问链接</a> </h4>\n");
          out.write("<img  class=\"img-polaroid\"  width='80%'  src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.webapp}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/images/userMonitor/userMonitor04.png\"/>\n");
          out.write("</br></br>\n");
          out.write("<h4 class=\"text-danger\">3、告警&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"/cat/s/web?op=webRule\">访问链接</a> </h4>\n");
          out.write("<h5 class=\"text-success\">A) 配置一览表</h5>\n");
          out.write("<img  class=\"img-polaroid\"  width='80%'  src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.webapp}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/images/userMonitor/userMonitor08.png\"/>\n");
          out.write("<h5 class=\"text-success\">B) 配置告警规则</h5>\n");
          out.write("<p>（1）告警名自定义，方便区分告警项。可对<span class=\"text-danger\">请求数、访问成功率、响应时间</span>进行监控。</p>\n");
          out.write("<p>（2）多个监控规则构成了告警的主体，分别对不同时间段进行配置，以方便准确地进行告警。</p>\n");
          out.write("<p>（3）监控规则诠释着某个时间段内如何进行告警，由任意多个监控条件组成。任何一条监控条件触发都会引起监控规则触发，从而告警。</p>\n");
          out.write("<p>（4）监控条件诠释着什么条件会触发监控规则，由任意多个监控子条件组成。当所有子条件同时被触发时，才会触发该监控规则。</p>\n");
          out.write("\n");
          out.write("<img  class=\"img-polaroid\"  width='80%'  src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.webapp}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/images/userMonitor/userMonitor09.png\"/>\n");
          out.write("\n");
          out.write("\n");
          out.write("\n");
          out.write("</div>\n");
          out.write("    <div class=\"tab-pane\" id=\"interface\">");
          out.write("\n");
          out.write("<h4 class=\"text-danger\">用户端监控文档</h4>\n");
          out.write("<h5 class=\"text-info\"> a).从用户端角度来看点评的业务接口状态，这是一个端到端的监控，能最早的发现用户端出现问题，比如根本访问不到点评，某城市延迟很大等。</h5>\n");
          out.write("<h5 class=\"text-info\"> b).用户端的监控目前能监控Ajax接口，页面Page不能监控到。</h5>\n");
          out.write("<h5 class=\"text-info\"> c).一般一个应用会监控1-2个重要接口，后端实时分析会按照城市、运营商维度做一些聚合分析。</h5>\n");
          out.write("\n");
          out.write("<br/>\n");
          out.write("<h4>外部监控API文档</h4> \n");
          out.write("<p>用途：提供外部监控的Http接口，用于监控用户端的错误信息。</p>\n");
          out.write("<p>1、为了保留以后的扩展性，移动端和Web端的暂定用不同的API接口。</p>\n");
          out.write("<p class=\"text-danger\">2、公网IP，221.181.67.144 文档后面{ip}使用这个。</p>\n");
          out.write("\n");
          out.write("<br/>\n");
          out.write("<h4 class=\"text-danger\">Web单次接口</h4>\n");
          out.write("\t<pre>\thttp://{ip}/web-broker-service/api/ajax</pre>\n");
          out.write("\t\n");
          out.write("\t<p>参数说明</p>\n");
          out.write("\t<table style=\"width:70%\" class=\"table table-bordered table-striped table-condensed  \">\n");
          out.write("\t\t<tr><th>query名</th><th>实际名称</th><th>描述</th><th>类型</th></tr>\t\n");
          out.write("\t\t<tr><td>v</td><td>version</td><td>API版本号</td><td>暂定为1</td></tr>\n");
          out.write("\t\t<tr><td>ts</td><td>timestamp</td><td>发生时间</td><td>long型，1970到现在的毫秒数</td></tr>\n");
          out.write("\t\t<tr><td>tu</td><td>targetUrl</td><td>调用的URL或API</td><td>String</td></tr>\n");
          out.write("\t\t<tr><td>d</td><td>duration</td><td>访问耗时</td><td>long 毫秒</td></tr>\n");
          out.write("\t\t<tr><td>c</td><td>code</td><td>返回结果码</td><td>整型</td></tr>\n");
          out.write("\t\t<tr><td>s</td><td>requestByte</td><td>发送字节数</td><td>整型，以byte为单位</td></tr>\n");
          out.write("\t\t<tr><td>r</td><td>responseByte</td><td>返回字节数</td><td>整型，以byte为单位</td></tr>\n");
          out.write("\t\t<tr><td>n</td><td>network</td><td>网络类型</td><td>整型, 2G,3G,4G,WIFI(iOS只有3G和WIFI)，1=wifi, 2=2G, 3=3G, 4=4G, 0=Unknown</td></tr>\n");
          out.write("\t</table>\n");
          out.write("<br/>\n");
          out.write("\n");
          out.write("<br/>\n");
          out.write("<h4 class=\"text-danger\">JS 错误上报接口</h4>\n");
          out.write("\t<pre>\thttp://{ip}/web-broker-service/api/js</pre>\n");
          out.write("\t\n");
          out.write("\t<p>参数说明</p>\n");
          out.write("\t<table style=\"width:70%\" class=\"table table-bordered table-striped table-condensed  \">\n");
          out.write("\t\t<tr><th>query名</th><th>实际名称</th><th>描述</th><th>类型</th></tr>\t\n");
          out.write("\t\t<tr><td>v</td><td>version</td><td>API版本号</td><td>暂定为1</td></tr>\n");
          out.write("\t\t<tr><td>t</td><td>timestamp</td><td>发生时间</td><td>long型，1970到现在的毫秒数</td></tr>\n");
          out.write("\t\t<tr><td>msg</td><td>message</td><td>错误的类型,简要信息</td><td>String</td></tr>\n");
          out.write("\t\t<tr><td>n</td><td>appName</td><td>错误的发生的应用模块</td><td>String</td></tr>\n");
          out.write("\t\t<tr><td>l</td><td>level</td><td>错误等级</td><td>String,包括ERROR,WARN,INFO,DEV</td></tr>\n");
          out.write("\t\t<tr><td>a</td><td>agent</td><td>浏览器信息</td><td>String</td></tr>\n");
          out.write("\t\t<tr><td>id</td><td>dpid</td><td>用户ID，用于搜索错误日志</td><td>String</td></tr>\n");
          out.write("\t\t<tr><td>data</td><td>data</td><td>详细出错信息</td><td>String，如果没有的话，传空串</td></tr>\n");
          out.write("\t</table>\n");
          out.write("\t<br/>\n");
          out.write("\n");
          out.write("<h4 class=\"text-danger\">Web原始日志上报接口</h4>\n");
          out.write("\t<pre>\thttp://{ip}/web-broker-service/api/log</pre>\n");
          out.write("\t\n");
          out.write("\t批量接口POST内容，前面加上v=1&c=，不同请求之间用回车<span class=\"text-danger\">ENTER</span>分隔，字段之间用<span class=\"text-danger\">TAB</span>分隔。\n");
          out.write("\n");
          out.write("\t<pre>\n");
          out.write("\ttimstamp<span class=\"text-danger\">TAB</span>level<span class=\"text-danger\">TAB</span>requestId<span class=\"text-danger\">TAB</span>appName<span class=\"text-danger\">TAB</span>url<span class=\"text-danger\">TAB</span>message<span class=\"text-danger\">ENTER</span>\n");
          out.write("\t\n");
          out.write("\tsample如下:\n");
          out.write("\t\n");
          out.write("\tv=1&c=\n");
          out.write("\t1400037748182<span class=\"text-danger\">TAB</span>ERROR<span class=\"text-danger\">TAB</span>11233333<span class=\"text-danger\">TAB</span>shopInfo<span class=\"text-danger\">TAB</span>url1<span class=\"text-danger\">TAB</span>test1<span class=\"text-danger\">ENTER</span>\n");
          out.write("\t1400037748182<span class=\"text-danger\">TAB</span>INFO<span class=\"text-danger\">TAB</span>22339283<span class=\"text-danger\">TAB</span>shopInfo<span class=\"text-danger\">TAB</span>url2<span class=\"text-danger\">TAB</span>test2<span class=\"text-danger\">ENTER</span>\n");
          out.write("\t1400037748182<span class=\"text-danger\">TAB</span>WARN<span class=\"text-danger\">TAB</span>13456664<span class=\"text-danger\">TAB</span>shopInfo<span class=\"text-danger\">TAB</span>url3<span class=\"text-danger\">TAB</span>test3<span class=\"text-danger\">ENTER</span>\n");
          out.write("\t</pre>\n");
          out.write("\t<p class=\"text-danger\">v=1&c=不需要做urlencode,后面的批量的content部分需要urlencode。</p>\n");
          out.write("\t<p>参数说明</p>\n");
          out.write("\t<table style=\"width:70%\" class=\"table table-bordered table-striped table-condensed  \">\n");
          out.write("\t\t<tr><th>实际名称</th><th>描述</th><th>类型</th></tr>\t\n");
          out.write("\t\t<tr><td>v</td><td>API版本号</td><td>暂定为1</td></tr>\n");
          out.write("\t\t<tr><td>c</td><td>具体内容</td><td>content内容</td></tr>\n");
          out.write("\t</table>\n");
          out.write("\t<p>content内容说明</p>\n");
          out.write("\t<pre>\n");
          out.write("\ttimestamp<span class=\"text-danger\">TAB</span>level<span class=\"text-danger\">TAB</span>requestId<span class=\"text-danger\">TAB</span>appName<span class=\"text-danger\">TAB</span>Url<span class=\"text-danger\">TAB</span>message<span class=\"text-danger\">ENTER</span>\n");
          out.write("\t</pre>\n");
          out.write("\t<table style=\"width:70%\" class=\"table table-bordered table-striped table-condensed  \">\n");
          out.write("\t\t<tr><th>实际名称</th><th>描述</th><th>类型</th></tr>\t\n");
          out.write("\t\t<tr><td>timestamp</td><td>发生时间</td><td>long型，1970到现在的毫秒数</td></tr>\n");
          out.write("\t\t<tr><td>level</td><td>log等级</td><td>DEV,INFO,WARN,ERROR</td></tr>\n");
          out.write("\t\t<tr><td>requestId</td><td>用户id</td><td>String</td></tr>\n");
          out.write("\t\t<tr><td>appName</td><td>应用名</td><td>String</td></tr>\n");
          out.write("\t\t<tr><td>Url</td><td>请求访问的URL</td><td>String</td></tr>\n");
          out.write("\t\t<tr><td>message</td><td>日志信息</td><td>String</td></tr>\n");
          out.write("\t</table>\n");
          out.write("<br/>\n");
          out.write("\t\n");
          out.write("<h4 class=\"text-danger\">Web测速上报接口</h4>\n");
          out.write("<pre>\thttp://{ip}/web-broker-service/api/speed</pre>\n");
          out.write("\t\n");
          out.write("<p>参数说明</p>\n");
          out.write("<table style=\"width:90%\" class=\"table table-bordered table-striped table-condensed  \">\n");
          out.write("\t\t<tr><th style=\"width:10%\">query名</th><th style=\"width:15%\">实际名称</th><th style=\"width:15%\">描述</th><th style=\"width:60%\">类型</th></tr>\t\n");
          out.write("\t\t<tr><td>v</td><td>version</td><td>API版本号</td><td>暂定为2</td></tr>\n");
          out.write("\t\t<tr><td>t</td><td>timestamp</td><td>发生时间</td><td>long型，1970到现在的毫秒数</td></tr>\n");
          out.write("\t\t<tr><td>n</td><td>network</td><td>网络类型</td><td>整型, 2G,3G,4G,WIFI(iOS只有3G和WIFI)，1=wifi, 2=2G, 3=3G, 4=4G, 0=Unknown</td></tr>\n");
          out.write("\t\t<tr><td>p</td><td>platform</td><td>平台类型</td><td>整型</td></tr>\n");
          out.write("\t\t<tr><td>source</td><td>source</td><td>来源</td><td>整型</td></tr>\n");
          out.write("\t\t<tr><td>w</td><td>page</td><td>web页面id，可于配置页面查询</td><td>整型</td></tr>\n");
          out.write("\t\t<tr><td>speedparams</td><td>测速点</td><td>详细测速信息</td><td>以测速点编号-时间为一个单元，每个测速点之间以\\t分隔， step1-responseTime1<span class=\"text-danger\">TAB</span>step2-responseTime2...,例如1-1\\t2-10\\t3-100表明编号为1的测速点加载时间1毫秒，编号为2的测速点，加载时间10毫秒...</td></tr>\n");
          out.write("</table>\n");
          out.write("<br/>\n");
          out.write("\n");
          out.write("<h4 class=\"text-danger\">Web测速 日报表数据获取接口</h4>\n");
          out.write("  1.测速点获取\n");
          out.write("\t<pre> http://cat.dp/cat/r/browser?op=speedConfigFetch&type={type}</pre>\n");
          out.write("\ttype可为xml或json,分别返回相应格式的数据。<br/>\n");
          out.write("\tjson数据示例：\n");
          out.write("\t<pre>\n");
          out.write("{\n");
          out.write("    \"speeds\": {\n");
          out.write("        \"1\": {\n");
          out.write("            \"id\": 1,\n");
          out.write("            \"page\": \"testpage\",\n");
          out.write("            \"steps\": {\n");
          out.write("                \"1\": {\n");
          out.write("                    \"id\": 1,\n");
          out.write("                    \"title\": \"unloadEventStart\"\n");
          out.write("                },\n");
          out.write("                \"2\": {\n");
          out.write("                    \"id\": 2,\n");
          out.write("                    \"title\": \"unloadEventEnd\"\n");
          out.write("                }\n");
          out.write("            }\n");
          out.write("        },\n");
          out.write("        \"2\": {\n");
          out.write("            \"id\": 2,\n");
          out.write("            \"page\": \"homepage\",\n");
          out.write("            \"steps\": {\n");
          out.write("                \"1\": {\n");
          out.write("                    \"id\": 1,\n");
          out.write("                    \"title\": \"unloadEventStart\"\n");
          out.write("                },\n");
          out.write("                \"2\": {\n");
          out.write("                    \"id\": 2,\n");
          out.write("                    \"title\": \"unloadEventEnd\"\n");
          out.write("                }   \n");
          out.write("            }\n");
          out.write("        }\n");
          out.write("    }\n");
          out.write("}\n");
          out.write("</pre>\n");
          out.write("  2.数据获取\n");
          out.write(" \t<pre> http://cat.dp/cat/r/browser?op=speedJson&query1={query}</pre>\n");
          out.write(" \n");
          out.write("query条件如下：\n");
          out.write("<pre>\n");
          out.write("{date};{page};{stepId};{network};{platform};{city};{operator};{source}\n");
          out.write("\n");
          out.write("date格式为'YYYY-MM-DD'\n");
          out.write("page由pageId和pageName组成，中间用竖线\"|\"分隔\n");
          out.write("stepId为测速点ID\n");
          out.write("network、platform、city、operator、source均为整型，具体数值含义见 http://cat.dp/cat/s/web?op=webConstants,不传默认为查询全部数据\n");
          out.write("</pre>\n");
          out.write("示例：\n");
          out.write("<pre>\n");
          out.write("http://cat.dp/cat/r/browser?op=speedJson&query1=2015-11-25;1|testpage;1;;;;;\n");
          out.write("该示例表明查询2015年11月25日,pageId为1，pageName为testpage，测速点编号为1的测速点数据。\n");
          out.write("\n");
          out.write("返回数据示例如下：\n");
          out.write("{\n");
          out.write("    \"webSpeedSummarys\": {\n");
          out.write("        \"当前值\": {\n");
          out.write("            \"period\": \"2015-11-25 00:00:00\",\n");
          out.write("            \"minuteOrder\": 0,\n");
          out.write("            \"accessNumberSum\": 781,\n");
          out.write("            \"responseTimeAvg\": 2.381562099871959\n");
          out.write("        }\n");
          out.write("    },\n");
          out.write("    \"webSpeedDetails\": {\n");
          out.write("        \"当前值\": [\n");
          out.write("            {\n");
          out.write("                \"period\": \"2015-11-25 00:00:00\",\n");
          out.write("                \"minuteOrder\": 0,\n");
          out.write("                \"accessNumberSum\": 30,\n");
          out.write("                \"responseTimeAvg\": 1.6\n");
          out.write("            },\n");
          out.write("            {\n");
          out.write("                \"period\": \"2015-11-25 00:00:00\",\n");
          out.write("                \"minuteOrder\": 5,\n");
          out.write("                \"accessNumberSum\": 39,\n");
          out.write("                \"responseTimeAvg\": 3.3076923076923075\n");
          out.write("            }\n");
          out.write("          ...\n");
          out.write("        ]\n");
          out.write("    }\n");
          out.write("}\n");
          out.write("</pre>\n");
          out.write("webSpeedSummarys中为当天数据的聚合值，webSpeedDetails中存放一天中每五分钟的速度均值。\n");
          out.write("<br/>\n");
          out.write("\n");
          out.write("\n");
          out.write("\n");
          out.write("\t\n");
          out.write("\t\n");
          out.write("\t");
          out.write("</div>\n");
          out.write("    <div class=\"tab-pane\" id=\"alert\">");
          out.write("\n");
          out.write("<h4 class=\"text-success\">前端JS告警</h4>\n");
          out.write("<h5>前端JS告警监控JavaScript运行状况。</h5>\n");
          out.write("<h5>当某一个页面上js运行抛出的Error总数超过设定的阈值时，发出告警信息。</h5>\n");
          out.write("<br/>\n");
          out.write("<h4 class=\"text-success\">监控规则配置</h4>\n");
          out.write("<p>为了满足监控的需求，前端JS监控规则没有采用通用的规则模型。其配置如下：</p>\n");
          out.write("<img class=\"img-polaroid\" width='60%'\n");
          out.write("\tsrc=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.webapp}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/images/alert/frontendException.png\" />\n");
          out.write("<p>各个参数含义如下</p>\n");
          out.write("<p><span class=\"text-danger\">[模块名称]</span>：JS告警的业务模块</p>\n");
          out.write("<p><span class=\"text-danger\">[报错等级]</span>：JS错误的等级</p>\n");
          out.write("<p><span class=\"text-danger\">[告警阈值]</span>：在一分钟内js抛出error个数的上限值。超过这个值就会发出告警</p>\n");
          out.write("<p><span class=\"text-danger\">[联系人邮件]</span>：告警联系人。多个联系人请用，分开</p>\n");
          out.write("<br/>\n");
          out.write("<h4 class=\"text-success\">规则更新</h4>\n");
          out.write("<p>1).点击config－－JS告警－－进入前端JS监控规则配置页面。</p>\n");
          out.write("<p>2).点击新增按钮或者选取已有网址的编辑按钮，按照上述介绍对规则进行配置并提交，如果列表页面已更新，则表示规则已经生效。</p>\n");
          out.write("<br/>\n");
          out.write("<h4 class=\"text-success\">告警策略配置</h4>\n");
          out.write("<p>1).点击导航栏Config－－监控告警配置－－告警类型设置</p>\n");
          out.write("<p>2).编辑id为Js的type元素</p>\n");
          out.write("<p>&nbsp;&nbsp;&nbsp;&nbsp;只有一个group元素，其id为Js。请不要再添加其它group元素</p>\n");
          out.write("<p>&nbsp;&nbsp;&nbsp;&nbsp;对group下的level元素进行编辑</p>\n");
          out.write("<p>&nbsp;&nbsp;&nbsp;&nbsp;send属性可为mail,weixin,sms</p>\n");
          out.write("<p>3).当出现\"操作成功\"提示时表明策略已经生效</p>");
          out.write("</div>\n");
          out.write("   </div>\n");
          out.write("</div>\n");
          out.write("\n");
          out.write("\t   \t");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        throw new javax.servlet.jsp.SkipPageException();
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f3);
      _jspx_th_c_005fwhen_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("\t   \t\t");
          out.write("\n");
          out.write("<h4 class=\"text-success\">CAT总体介绍</h4>\n");
          out.write("<h5>CAT(Central Application Tracking)是基于Java开发的实时应用监控平台，为美团点评提供了全面的监控服务和决策支持。\n");
          out.write("</h5>\n");
          out.write("<h5>CAT作为美团点评基础监控组件，它已经在中间件框架（MVC框架，RPC框架，数据库框架，缓存框架等）中得到广泛应用，为美团点评各业务线提供系统的性能指标、健康状况、基础告警等。</h5>\n");
          out.write("</br>\n");
          out.write("<h4 class=\"text-success\">CAT目前现状</h4>\n");
          out.write("\t<ul>\n");
          out.write("\t\t<li>15台CAT物理监控集群</li>\n");
          out.write("\t\t<li>单台机器15w qps</li>\n");
          out.write("\t\t<li>2000+ 业务应用（包括部分.net以及Job）</li>\n");
          out.write("\t\t<li>7000+ 应用服务器</li>\n");
          out.write("\t\t<li>50TB 消息，~450亿消息（每天）</li>\n");
          out.write("\t</ul>\n");
          out.write("\t<br/>\n");
          out.write("<h4 class=\"text-success\">CAT监控大盘</h4>\n");
          out.write("<div>\n");
          out.write("\t<a id=\"navmetricDashboard\" class=\"btn btn-sm btn-primary\" target=\"_blank\" href=\"/cat/r/top?op=view&domain=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.domain}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">系统报错大盘</a>\n");
          out.write("\t");
          out.write('\n');
          out.write('	');
          out.write('\n');
          out.write('	');
          out.write('\n');
          out.write('	');
          out.write("\n");
          out.write("</div>\n");
          out.write("</br>\n");
          out.write('\n');
          out.write('\n');
          out.write('	');
          out.write('\n');
          out.write('	');
          out.write('\n');
          out.write('	');
          out.write('\n');
          out.write('\n');
          out.write("\n");
          out.write("<h4 class=\"text-danger\">更多接入公司，欢迎在<a href=\"https://github.com/dianping/cat/issues/753\" target=\"_blank\">登记！</a></h4>\n");
          out.write("<table>\n");
          out.write("\t<tr>\n");
          out.write("\t\t<td><a target=\"_blank\" href=\"http://www.dianping.com/\"><img  class=\"img-polaroid\"  src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.webapp}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/images/logo/dianping.png\"/></a></td>\n");
          out.write("\t\t<td><a target=\"_blank\" href=\"http://www.ctrip.com/\"><img  class=\"img-polaroid\"  src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.webapp}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/images/logo/ctrip.png\"/></a></td>\n");
          out.write("\t\t<td><a target=\"_blank\" href=\"https://www.lufax.com/\"><img  class=\"img-polaroid\"  src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.webapp}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/images/logo/lufax.png\"/></a></td>\n");
          out.write("\t\t<td><a target=\"_blank\" href=\"http://www.ly.com/\"><img  class=\"img-polaroid\"  src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.webapp}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/images/logo/ly.png\"/></a></td>\n");
          out.write("\t</tr>\n");
          out.write("\t<tr>\n");
          out.write("\t\t<td><a target=\"_blank\" href=\"http://www.liepin.com/\"><img  class=\"img-polaroid\"  src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.webapp}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/images/logo/liepin.png\"/></a></td>\n");
          out.write("\t\t<td><a target=\"_blank\" href=\"http://www.qipeipu.com/\"><img  class=\"img-polaroid\"  src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.webapp}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/images/logo/qipeipu.jpg\"/></a></td>\n");
          out.write("\t\t<td><a target=\"_blank\" href=\"http://www.shangpin.com/\"><img  class=\"img-polaroid\"  src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.webapp}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/images/logo/shangping.jpg\"/></a></td>\n");
          out.write("\t\t<td><a target=\"_blank\" href=\"http://www.travelzen.com/flight/\"><img  class=\"img-polaroid\"  src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.webapp}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/images/logo/zhenlv.png\"/></a></td>\n");
          out.write("\t\t<td></td>\n");
          out.write("\t</tr>\n");
          out.write("\t<tr>\n");
          out.write("\t\t<td><a target=\"_blank\" href=\"http://www.oppo.com/\"><img  class=\"img-polaroid\"  src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.webapp}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/images/logo/oppo.png\"/></a></td>\n");
          out.write("\t</tr>\n");
          out.write("</table>\n");
          out.write("\n");
          out.write("\t   \t");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        throw new javax.servlet.jsp.SkipPageException();
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }

  private class Helper
      extends org.apache.jasper.runtime.JspFragmentHelper
  {
    private javax.servlet.jsp.tagext.JspTag _jspx_parent;
    private int[] _jspx_push_body_count;

    public Helper( int discriminator, javax.servlet.jsp.JspContext jspContext, javax.servlet.jsp.tagext.JspTag _jspx_parent, int[] _jspx_push_body_count ) {
      super( discriminator, jspContext, _jspx_parent );
      this._jspx_parent = _jspx_parent;
      this._jspx_push_body_count = _jspx_push_body_count;
    }
    public boolean invoke0( javax.servlet.jsp.JspWriter out ) 
      throws java.lang.Throwable
    {
      out.write("\n");
      out.write("\t<div class=\"tab-content\">\n");
      out.write("\t\t\t");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_parent, _jspx_page_context))
        return true;
      out.write("\n");
      out.write("\t</div>\n");
      out.write("<br>\n");
      out.write("<br>\n");
      out.write("<a href=\"?op=checkpoint&domain=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.domain}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&date=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${model.date}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" style=\"color:#FFF\">Do checkpoint here</a>\n");
      out.write("<script>\n");
      out.write("\tvar liElement = $('#");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${payload.docName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("Button');\n");
      out.write("\tif(liElement.size() == 0){\n");
      out.write("\t\tliElement = $('#indexButton');\n");
      out.write("\t}\n");
      out.write("\tliElement.addClass('active');\n");
      out.write("</script>\n");
      return false;
    }
    public void invoke( java.io.Writer writer )
      throws javax.servlet.jsp.JspException
    {
      javax.servlet.jsp.JspWriter out = null;
      if( writer != null ) {
        out = this.jspContext.pushBody(writer);
      } else {
        out = this.jspContext.getOut();
      }
      try {
        Object _jspx_saved_JspContext = this.jspContext.getELContext().getContext(javax.servlet.jsp.JspContext.class);
        this.jspContext.getELContext().putContext(javax.servlet.jsp.JspContext.class,this.jspContext);
        switch( this.discriminator ) {
          case 0:
            invoke0( out );
            break;
        }
        jspContext.getELContext().putContext(javax.servlet.jsp.JspContext.class,_jspx_saved_JspContext);
      }
      catch( java.lang.Throwable e ) {
        if (e instanceof javax.servlet.jsp.SkipPageException)
            throw (javax.servlet.jsp.SkipPageException) e;
        throw new javax.servlet.jsp.JspException( e );
      }
      finally {
        if( writer != null ) {
          this.jspContext.popBody();
        }
      }
    }
  }
}
